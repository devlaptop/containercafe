# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

$install_ansible = <<SCRIPT
apt-add-repository ppa:ansible/ansible-1.9
apt-get -qq update
apt-get -qq -y install ansible
SCRIPT

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "ubuntu/trusty64"
  config.ssh.insert_key = false
    
  (1..2).each do |i|
    config.vm.define "radiant#{i+1}" do |node|
      node.vm.network "private_network", ip: "192.168.10.#{i+1}"
      node.vm.hostname = "radiant#{i+1}"
    
      node.vm.provider "virtualbox" do |nodeopts|
        nodeopts.name = "radiant#{i+1}"
        nodeopts.memory = 1536
        nodeopts.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
        nodeopts.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
      end
    end
  end
  
  ['ansible', 'example'].each do |name|
    config.vm.define name, autostart: false do |ansible|
      ansible.vm.network "private_network", ip: "192.168.9.253"
      ansible.vm.synced_folder ".", "/vagrant", disabled: true
      ansible.vm.synced_folder "../../ansible", "/vagrant/synced_ansible", mount_options: ["dmode=775,fmode=664"]
      ansible.vm.synced_folder "../../crawler", "/vagrant/crawler", mount_options: ["dmode=775,fmode=664"]
      ansible.vm.synced_folder "../../misc", "/vagrant/misc", mount_options: ["dmode=775,fmode=664"]
      ansible.vm.synced_folder "../../proxy", "/vagrant/proxy", mount_options: ["dmode=775,fmode=664"]
      ansible.vm.synced_folder "../../remoteabac", "/vagrant/remoteabac", mount_options: ["dmode=775,fmode=664"]
      ansible.vm.synced_folder "../envs", "/vagrant/examples/envs", mount_options: ["dmode=775,fmode=664"]
    
      # Ansible fails on Windows when writes on a synced folder 
      # (see https://github.com/ansible/ansible/issues/9526#issuecomment-199443969)
      ansible.vm.provision "shell", inline: "cp -rp /vagrant/synced_ansible /vagrant/ansible"
    
      ansible.vm.provision "file", source: "~/.vagrant.d/insecure_private_key", destination: "/home/vagrant/.vagrant.d/insecure_private_key"
      ansible.vm.provision "shell", inline: "chmod 600 /home/vagrant/.vagrant.d/insecure_private_key"
      ansible.vm.provision "shell", inline: $install_ansible
      ansible.vm.provision "shell", privileged: false, inline: "source ~/.profile && [ -z \"$ANSIBLE_INVENTORY\" ] && echo \"export ANSIBLE_INVENTORY=/vagrant/examples/envs/dev-vbox/radiant01.hosts\" >> ~/.profile"
    
      if name == 'example'
        ansible.vm.provision "shell", privileged: false, inline: "cd /vagrant/ansible && ansible-playbook -v shard.yml -e cluster_name=dev-vbox-radiant01 -e network_kind=bridge"
        ansible.vm.provision "shell", inline: "cp -rf /vagrant/ansible/certs /vagrant/synced_ansible"
      end
    
      ansible.vm.provider "virtualbox" do |virtualbox|
        virtualbox.name = name
      end
    end
  end
  
  config.vm.define 'proxy', autostart: false do |proxy|
    proxy.vm.network "private_network", ip: "192.168.9.252"
    proxy.vm.synced_folder ".", "/vagrant", disabled: true
    proxy.vm.synced_folder "../../ansible", "/openradiant/ansible", mount_options: ["dmode=775,fmode=664"], owner: "vagrant", :group => "vagrant"
    proxy.vm.synced_folder "../../proxy", "/openradiant/proxy", mount_options: ["dmode=775,fmode=764"], owner: "vagrant", :group => "vagrant"
    
    proxy.vm.provision "docker", images: [ "ubuntu" ]
    
    # with (privileged: false) the commands are runned from vagrant user, .openradiant will be in vagrant's home directory
    proxy.vm.provision "shell", privileged: false, inline: "ln -s /openradiant/proxy"
    proxy.vm.provision "shell", privileged: false, inline: "cd /openradiant/proxy && sudo ./builddocker.sh"
    proxy.vm.provision "shell", privileged: false, inline: "cd /openradiant/proxy && sudo ./rundocker.sh dev-vbox -d", run: "always"
    
    proxy.vm.provider "virtualbox" do |virtualbox|
      virtualbox.name = "api-proxy"
    end
  end
end
