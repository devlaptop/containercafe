#jinja2: trim_blocks: True, lstrip_blocks: True
apiVersion: v1
kind: Pod
metadata:
  name: kube-{{ k8s_apiserver_cn }}
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: kube-{{ k8s_apiserver_cn }}
    image: {{ kube_image }}
    imagePullPolicy: Always
    command:
    - /opt/kubernetes/bin/km
    - apiserver
    - --bind-address=0.0.0.0
    - --insecure-bind-address=127.0.0.1
    - --etcd-servers={% set comma = joiner(",") %}
                     {%- for host in groups['etcd-' ~ cluster_name] -%}
                       {{ comma() }}http://{{ host }}:{{ etcd_port }}
                     {%- endfor %}

    - --allow-privileged=true
    - --service-cluster-ip-range={{ k8s_service_ip_range }}
    - --secure-port={{ k8s_apiserver_sport }}
    - --insecure-port={{ k8s_apiserver_port }}
    {%if kubernetes_on_mesos_deploy==false%}
    - --cloud-provider=mesos
    - --cloud-config={{k8s_etc_dir}}/mesos-cloud.conf{%endif%}
    - --advertise-address={{ hostvars[inventory_hostname]['ansible_' ~ network_interface]['ipv4']['address'] }}
    - --tls-cert-file={{ k8s_cert_dir }}/{{ k8s_apiserver_cn }}.pem
    - --tls-private-key-file={{ k8s_cert_dir }}/{{ k8s_apiserver_cn }}-key.pem
    - --client-ca-file={{ k8s_cert_dir }}/{{ ca_cert }}
    - --authorization-mode=Webhook
    - --authorization-webhook-config-file={{ k8s_etc_dir }}/webhook-config
    - --admission-control=LimitRanger,NamespaceLifecycle,ResourceQuota
    - --v=2
    ports:
    - containerPort: {{ k8s_apiserver_sport }}
      hostPort: {{ k8s_apiserver_sport }}
      name: https
    - containerPort: {{ k8s_apiserver_port }}
      hostPort: {{ k8s_apiserver_port }}
      name: local
    volumeMounts:
    - mountPath: {{ k8s_etc_dir }}
      name: kubernetes-config
      readOnly: true
    - mountPath: {{ k8s_cert_dir }}
      name: kubernetes-certs
      readOnly: true
  volumes:
  - hostPath:
      path: {{ k8s_etc_dir }}
    name: kubernetes-config
  - hostPath:
      path: {{ k8s_cert_dir }}
    name: kubernetes-certs
