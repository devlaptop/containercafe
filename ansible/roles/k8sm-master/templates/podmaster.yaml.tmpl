apiVersion: v1
kind: Pod
metadata:
  name: kube-podmaster
  namespace: kube-system
spec:
  hostNetwork: true
  containers:
  - name: scheduler-elector
    image: {{ kube_podmaster_image }}
    command:
    - /podmaster
    - --etcd-servers={% set comma = joiner(",") %}
                     {%- for host in groups['etcd-' ~ cluster_name] -%}
                       {{ comma() }}http://{{ host }}:{{ etcd_port }}
                     {%- endfor %}
    - --key=scheduler
    - --whoami={{ hostvars[inventory_hostname]['ansible_' ~ network_interface]['ipv4']['address'] }}
    - --source-file=/src/manifests/{{ k8s_scheduler_cn }}.yaml
    - --dest-file=/dst/manifests/{{ k8s_scheduler_cn }}.yaml
    volumeMounts:
    - mountPath: /src/manifests
      name: manifest-src
      readOnly: true
    - mountPath: /dst/manifests
      name: manifest-dst
  - name: controller-manager-elector
    image: {{ kube_podmaster_image }}
    command:
    - /podmaster
    - --etcd-servers={% set comma = joiner(",") %}
                     {%- for host in groups['etcd-' ~ cluster_name] -%}
                       {{ comma() }}http://{{ host }}:{{ etcd_port }}
                     {%- endfor %}

    - --key=controller
    - --whoami={{ hostvars[inventory_hostname]['ansible_' ~ network_interface]['ipv4']['address'] }}
    - --source-file=/src/manifests/{{ k8s_controller_manager_cn }}.yaml
    - --dest-file=/dst/manifests/{{ k8s_controller_manager_cn }}.yaml
    terminationMessagePath: /dev/termination-log
    volumeMounts:
    - mountPath: /src/manifests
      name: manifest-src
      readOnly: true
    - mountPath: /dst/manifests
      name: manifest-dst
  volumes:
  - hostPath:
      path: {{ k8s_podmaster_manifests_dir }}
    name: manifest-src
  - hostPath:
      path: {{ k8s_kubelet_manifests_dir }}
    name: manifest-dst
