---

- name: ensure user's tmp dir exists
  file:
    dest: "{{ ansible_user_dir }}/tmp/{{ cluster_name }}"
    state: directory

- name: fetch Flannel archive
  get_url:
    dest: "{{ ansible_user_dir }}/tmp/"
    force: no
    url: https://github.com/coreos/flannel/releases/download/v{{flannel_version}}/flannel-{{flannel_version}}-linux-amd64.tar.gz

- name: unarchive Flannel
  unarchive:
    src: "{{ ansible_user_dir }}/tmp/flannel-{{flannel_version}}-linux-amd64.tar.gz"
    dest: "{{ ansible_user_dir }}/tmp/"
    creates: "{{ ansible_user_dir }}/tmp/flannel-{{flannel_version}}/flanneld"

- name: fetch Flannel upstart service
  get_url:
    dest: "{{ ansible_user_dir }}/tmp/"
    force: no
    url: https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.3/cluster/ubuntu/minion-flannel/init_conf/flanneld.conf

- name: Fetch KubeDNS RC template
  get_url:
    dest: "{{ ansible_user_dir }}/tmp/"
    force: no
    url: https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.3/cluster/saltbase/salt/kube-dns/skydns-rc.yaml.sed

- name: Instantiate KubeDNS RC template
  shell: cd "{{ ansible_user_dir }}/tmp" && sed 's/\$DNS_DOMAIN/cluster.local/g;s/\$DNS_REPLICAS/{{ groups['workers-' ~ cluster_name]|length }}/g' skydns-rc.yaml.sed > skydns-rc.yaml
  changed_when: False

- name: Fetch KubeDNS service template
  get_url:
    dest: "{{ ansible_user_dir }}/tmp/"
    force: no
    url: https://raw.githubusercontent.com/kubernetes/kubernetes/release-1.3/cluster/saltbase/salt/kube-dns/skydns-svc.yaml.sed

- name: Instantiate KubeDNS service template
  shell: cd "{{ ansible_user_dir }}/tmp" && sed 's/\$DNS_SERVER_IP/{{ k8s_service_ip_range|ipaddr('10')|ipaddr('address') }}/g' skydns-svc.yaml.sed > skydns-svc.yaml
  changed_when: False
